#set-option -g mouse on

bind-key a send-prefix

# vi key bindings
setw -g mode-keys vi

# Smarter `reattach-to-user-namespace` thanks to Alexey Samoshkin.
#
# Wrap default shell in reattach-to-user-namespace if available.
# There is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least windows are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

set -g default-terminal "screen-256color"

# Run a program and redirect output to a log file. This is mine. Looks for a
# `.tmux.run.sh` file in the current directory and runs it, logging the output
# to `~/.local/var/tmux.run.log`.
bind-key k run -b "perl ~/.dotfiles/bin/tmux.setpgrp.pl ~/.dotfiles/bin/tmux.run.sh #{window_index} #{pane_index}"
bind-key j run "~/.dotfiles/bin/tmux.kill.sh TERM"
bind-key K run "~/.dotfiles/bin/tmux.kill.sh KILL"

unbind C-b
set -g prefix C-a

# Get rolling with Nested tmux.
#
#   http://stahlke.org/dan/tmux-nested/
#
# Maintaining a minimally intrustive tmux at this point. Mapping S-up and S-down
# as suggested by Dan Stahlke. **TODO** Note that, according to Dan Stahlke,
# S-up and S-down are broken in `tmux` 2.6 so I might need a different key
# binding.
set -g status-bg colour40

# **TODO** From Dan Stahlke, not sure what it does.
#setw -g window-status-current-bg colour40

bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour237

bind -n S-up \
    send-keys M-F12 \; \
    set -qg status-bg colour25 \; \
    set -qg prefix C-b

bind -n S-down \
    send-keys M-F11 \; \
    set -qg status-bg colour237 \; \
    set -qg prefix C-a

# Taken directly from Alexey Samoshkin's series "tmux in practice"
#
#   https://medium.com/free-code-camp/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
#
# Nested `tmux` clipboards. Works wonderfully. Very impressed.
yank="~/.dotfiles/got/samoshkin/tmux/tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection
    
# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external

set-option -g update-environment "SSH_AUTH_SOCK"

run '~/.tmux/plugins/tpm/tpm'

set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux-gruvbox 'dark'
